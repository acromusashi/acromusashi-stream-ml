<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <name>acromusashi-stream-ml</name>
  <groupId>jp.co.acroquest.acromusashi</groupId>
  <artifactId>acromusashi-stream-ml</artifactId>
  <version>0.2.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <description>Realtime Big Data Platform</description>
  <url>https://github.com/acromusashi</url>
  <licenses>
    <license>
      <name>The MIT License (MIT)</name>
      <url>http://opensource.org/licenses/MIT</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <url>https://github.com/acromusashi/acromusashi-stream-ml</url>
    <connection>scm:git:https://github.com/acromusashi/acromusashi-stream-ml.git</connection>
    <developerConnection>scm:git:https://github.com/acromusashi/acromusashi-stream-ml.git</developerConnection>
  </scm>
  <developers>
    <developer>
      <id>acromusashi</id>
      <name>acromusashi</name>
      <email>acromusashi_developers@acroquest.co.jp</email>
      <url>https://github.com/acromusashi</url>
      <roles>
        <role>developer</role>
      </roles>    
      <timezone>-9</timezone>
    </developer>
  </developers>
  <distributionManagement>
    <repository>
      <id>sonatype-nexus-staging</id>
      <name>Nexus Release Repository</name>
      <uniqueVersion>false</uniqueVersion>
      <url>http://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>
  <profiles>
    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.4</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!-- プロジェクトプロパティ -->
  <properties>
    <jdk.version>1.7</jdk.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <site.encoding>UTF-8</site.encoding>
    <storm.version>0.9.0-rc2</storm.version>
    <infinispan.version>6.0.0.Final</infinispan.version>
    <jacoco.include.package>acromusashi.stream.ml.*</jacoco.include.package>
  </properties>

  <!-- リポジトリ設定 -->
  <repositories>
    <repository>
      <id>maven.org</id>
      <name>Maven</name>
      <url>http://repo1.maven.org/maven2</url>
    </repository>
    <repository>
      <id>apache.org</id>
      <name>Apache</name>
      <url>https://repository.apache.org/content/repositories/releases</url>
    </repository>
    <repository>
      <id>springsource.org</id>
      <name>SpringSource</name>
      <url>http://repo.springsource.org/release</url>
    </repository>
    <repository>
      <id>clojars.org</id>
      <name>Clojars</name>
      <url>http://clojars.org/repo</url>
    </repository>
    <repository>
      <id>cloudera.com</id>
      <name>Cloudera</name>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos</url>
    </repository>
  </repositories>

  <!-- 依存関係 -->
  <dependencies>  

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>

    <!-- AcroMUSASHIライブラリ -->
    <dependency>
      <groupId>jp.co.acroquest.acromusashi</groupId>
      <artifactId>acromusashi-stream</artifactId>
      <version>0.5.0</version>
      <exclusions>
        <exclusion>
          <groupId>storm</groupId>
          <artifactId>storm-kestrel_custom</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.hmsonline</groupId>
          <artifactId>storm-cassandra</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-spring</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-hbase</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-xmljson</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-jdbc</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.servicemix.bundles</groupId>
          <artifactId>org.apache.servicemix.bundles.snmp4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework.amqp</groupId>
          <artifactId>spring-amqp</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.elasticsearch</groupId>
          <artifactId>elasticsearch</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- 個別 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math</artifactId>
      <version>2.2</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.1</version>
    </dependency>

    <!-- Storm -->
    <dependency>
      <groupId>storm</groupId>
      <artifactId>storm</artifactId>
      <version>${storm.version}</version>
      <!-- Storm本体は実行環境で提供 -->
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-util</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Infinispan -->
    <dependency>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-client-hotrod</artifactId>
      <version>${infinispan.version}</version>
    </dependency>

  </dependencies>

  <!-- ビルド設定 -->
  <build>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <!-- ソースコードのルートパスの指定 -->
    <sourceDirectory>src/main/java</sourceDirectory>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <!-- テストコードのルートパスの指定 -->
    <testSourceDirectory>src/test/java</testSourceDirectory>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
    <defaultGoal>validate</defaultGoal>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <source>${jdk.version}</source>
            <target>${jdk.version}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
            <failOnError>true</failOnError>
            <fork>true</fork>
            <compilerArgument>-nowarn</compilerArgument>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.0</version>
          <configuration>
            <locales>ja</locales>
            <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
            <outputEncoding>${site.encoding}</outputEncoding>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <source>${java.version}</source>
          <encoding>${project.build.sourceEncoding}</encoding>
          <docencoding>${site.encoding}</docencoding>
          <charset>${site.encoding}</charset>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.10</version>
        <configuration>
          <argLine>${argLine}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <includes>
            <include>${jacoco.include.package}</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <phase>test-compile</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2-beta-5</version>
        <configuration>
          <finalName>${project.name}</finalName>
          <descriptors>
            <descriptor>src/main/assembly/distribution.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- レポート -->
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.6</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
              <report>summary</report>
              <report>project-team</report>
              <report>plugin-management</report>
              <report>plugins</report>
              <!--  report>dependencies</report -->
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <inputEncoding> ${project.build.sourceEncoding} </inputEncoding>
          <outputEncoding>${site.encoding}</outputEncoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <source>${java.version}</source>
          <encoding>${project.build.sourceEncoding}</encoding>
          <docencoding>${site.encoding}</docencoding>
          <charset>${site.encoding}</charset>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <configLocation>${basedir}/checkstyle.xml</configLocation>
            <!--
            <includes>**/*.java</includes>
            <excludes>**/stub/**/*.java, **/Test*.java</excludes>
            -->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.0.1</version>
        <configuration>
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
          <targetJdk>${jdk.version}</targetJdk>
          <!--
          <includes>
            <include>**/*foo.java</include>
          </includes>
          <excludes>
            <exclude>**/bar.java</exclude>
          </excludes>
          <excludeRoots>
            <excludeRoot>src/main/java/stubs</excludeRoot>
          </excludeRoots>
          -->
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <!-- report>pmd</report -->
              <report>cpd</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>2.5.2</version>
        <configuration>
          <!-- includeFilterFile>${basedir}/findbugs-include.xml</includeFilterFile -->
          <excludeFilterFile>${basedir}/findbugs-exclude.xml</excludeFilterFile>
          <xmlOutput>true</xmlOutput>
          <failOnError>false</failOnError>
          <!-- High|Normal|Low|Exp|Ignore -->
          <threshold>Normal</threshold>
          <!-- Min|Default|Max -->
          <effort>Default</effort>
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javancss-maven-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <lineThreshold>300</lineThreshold>
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>ncss</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.14.1</version>
        <!-- 
        <reportSets>
          <reportSet>
            <reports>
              <report>report-only</report>
            </reports>
          </reportSet>
        </reportSets>
        -->
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
</project>
